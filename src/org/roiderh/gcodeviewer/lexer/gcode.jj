/* gcode parser 

/home/herbert/archiv/javacc-5.0/bin/javacc gcode.jj


*/
options
{
 JAVA_UNICODE_ESCAPE = true;
  ERROR_REPORTING = true;
DEBUG_TOKEN_MANAGER = false;


  STATIC = false;
   COMMON_TOKEN_ACTION = false;
  JDK_VERSION = "1.5";
  LOOKAHEAD = 1;
  
}

PARSER_BEGIN(Gcodereader)
package org.roiderh.gcodeviewer.lexer;
import java.lang.String;
public class Gcodereader {
      Token x = null;
}

PARSER_END(Gcodereader)

TOKEN_MGR_DECLS :
{
  StringBuilder x;
}
// Diese Zeichen ignorieren wir
SKIP : { " " | "\t" | "\r" | "\n" }

<DEFAULT>
// ignore Linenumbers and Labels: "N10" or "MY_LABEL:"
SKIP: 
{
        <LABEL: (["A"-"Z","0"-"9","_","-"])+ (":") 
      |
       ("N")(["0"-"9"])+
>

}


// for Sinumerik to get the Parameter like "X = 3+5"
< DEFAULT > MORE : { < STARTPARAM : (["A"-"Z"])+(["0"-"9"])* (" ")* ("=") > : IN_PARAM }

< IN_PARAM > TOKEN : 
{ 
   < PARAM : ( (["A"-"Z","0"-"9",")"]) ( (" ")+ (["A"-"Z","0"-"9"])))
   |
   (("\n")|("\r"))
    
>  { matchedToken.image = image.toString().substring(0, image.toString().length()-1); matchedToken.image.trim(); input_stream.backup(1); } : DEFAULT 

} 

< IN_PARAM >  MORE : {  < TEXT : ~[] > }  

// The Parameter without the assign character: "Z-3.5" or "G1"
<DEFAULT>
TOKEN: 
{
        <G: ("G")(["0"-"9"])+ >
        | 
        <SHORT_PARAM: ((["A"-"Z"])+ ("-")? (<DECIMAL_FLOATING_POINT_LITERAL>)) 
           |
             ((["A"-"Z"])(["0"-"9"])+ ) 

             >

}



<DEFAULT>
TOKEN :
{
 
<#DECIMAL_FLOATING_POINT_LITERAL:
        (["0"-"9"])+ "." (["0"-"9"])* (<DECIMAL_EXPONENT>)? 
      | "." (["0"-"9"])+ (<DECIMAL_EXPONENT>)? 
      | (["0"-"9"])+ <DECIMAL_EXPONENT> 
      | (["0"-"9"])+ (<DECIMAL_EXPONENT>)? 
  >


}


TOKEN :
{
  < #DECIMAL_EXPONENT: ["e","E"] (["+","-"])? (["0"-"9"])+ >

}





