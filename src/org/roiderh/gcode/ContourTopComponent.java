/*
 * Copyright (C) 2014 by Herbert Roider <herbert.roider@utanet.at>
 * 
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 * 
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
package org.roiderh.gcode;

//import org.roiderh.gcode.Bundle;
import java.awt.BorderLayout;
import java.util.LinkedList;
import javafx.application.Platform;
import javafx.embed.swing.JFXPanel;
import javafx.scene.Scene;
import org.netbeans.api.settings.ConvertAsProperties;
import org.openide.awt.ActionID;
import org.openide.awt.ActionReference;
import org.openide.windows.TopComponent;
import org.roiderh.gcodeviewer.Toolpath;
import org.roiderh.gcodeviewer.contourelement;

/**
 * Top component which displays something.
 */
@ConvertAsProperties(
        dtd = "-//org.roiderh.gcode//Contour//EN",
        autostore = false
)
@TopComponent.Description(
        preferredID = "ContourTopComponent",
        iconBase = "org/roiderh/gcode/Drehwerkzeug_16x16.png", // icon in menu
        persistenceType = TopComponent.PERSISTENCE_ALWAYS
)
@TopComponent.Registration(mode = "output", openAtStartup = true)
@ActionID(category = "Window", id = "org.roiderh.gcode.ContourTopComponent")
@ActionReference(path = "Menu/Window" /*, position = 333 */)
@TopComponent.OpenActionRegistration(
        displayName = "#CTL_ContourAction",
        preferredID = "ContourTopComponent"
)

public final class ContourTopComponent extends TopComponent {

    /**
     * all Contourelements:
     */
    public LinkedList<contourelement> c_elements = null;

    JFXPanel fxPanel = new JFXPanel();
    Toolpath toolpath = null;

    public ContourTopComponent() {
        initComponents();
        setName(org.openide.util.NbBundle.getMessage(ContourTopComponent.class, "CTL_ContourTopComponent"));
        setToolTipText(org.openide.util.NbBundle.getMessage(ContourTopComponent.class, "HINT_ContourTopComponent"));

        Platform.setImplicitExit(false);
        Platform.runLater(new Runnable() {
            @Override
            public void run() {
                initFX();
            }
        });

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        label1 = new java.awt.Label();

        label1.setText(org.openide.util.NbBundle.getMessage(ContourTopComponent.class, "ContourTopComponent.label1.text")); // NOI18N
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private java.awt.Label label1;
    // End of variables declaration//GEN-END:variables
        @Override
    public void componentOpened() {
        // TODO add custom code on component opening
    }

    @Override
    public void componentClosed() {
        // TODO add custom code on component closing
    }

    private void initFX() {
        setLayout(new BorderLayout());
        this.toolpath = new Toolpath();
        Scene scene = new Scene(this.toolpath);
        this.fxPanel.setScene(scene);
        this.add(fxPanel);

    }

    void writeProperties(java.util.Properties p) {
        // better to version settings since initial version as advocated at
        // http://wiki.apidesign.org/wiki/PropertyFiles
        p.setProperty("version", "1.0");
        // TODO store your settings
    }

    void readProperties(java.util.Properties p) {
        String version = p.getProperty("version");
        // TODO read your settings according to their version
    }

    public void drawGraph() {
        //System.out.println("hallo ContourComponent");

        Platform.runLater(new Runnable() {
            @Override
            public void run() {
                toolpath.draw(c_elements);
            }

        });

    }

}
